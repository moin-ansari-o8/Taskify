CREATE TABLE bookings (
    booking_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    trek_id INT,
    slot_id INT,
    num_people INT,
    total_cost DECIMAL(10,2),
    status ENUM('pending', 'confirmed', 'cancelled') DEFAULT 'pending',
    payment_status ENUM('pending', 'paid', 'failed') DEFAULT 'pending',
    created_at DATETIME,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (trek_id) REFERENCES treks(trek_id),
    FOREIGN KEY (slot_id) REFERENCES trek_slots(slot_id)
);

CREATE TABLE trekker_details (
    trekker_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT,
    name VARCHAR(100),
    age INT,
    gender VARCHAR(50),
    phone VARCHAR(15),
    FOREIGN KEY (booking_id) REFERENCES bookings(booking_id)
);

CREATE TABLE booking_gear (
    booking_gear_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT,
    gear_id INT,
    quantity INT,
    price_at_booking DECIMAL(10,2),
    total_gear_cost DECIMAL(10,2),
    FOREIGN KEY (booking_id) REFERENCES bookings(booking_id),
    FOREIGN KEY (gear_id) REFERENCES rental_gear(gear_id)
);

CREATE TABLE transactions (
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT,
    user_id INT,
    amount_paid DECIMAL(10,2),
    payment_status ENUM('pending', 'paid', 'failed'),
    invoice_number VARCHAR(50),
    created_at DATETIME,
    FOREIGN KEY (booking_id) REFERENCES bookings(booking_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);